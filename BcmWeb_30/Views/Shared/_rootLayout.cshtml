<!DOCTYPE html>

<html>
<head>
    <meta charset="UTF-8" />
    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />
    <meta name="viewport" content="width=device-width, user-scalable=yes, maximum-scale=1.0, minimum-scale=1.0, initial-scale=1.0" />
    <meta name="robots" content="index follow" />
    <meta name="description" content="Business Continuity Manager" />
    <meta title="@ViewBag.Title" />
    <title>@ViewBag.Title</title>

    <link rel="SHORTCUT ICON" href="../../favicon.ico" />
    <link rel="icon" href="../../favicon.ico" type="image/ico" />

    <script src="@Url.Content("~/Scripts/jquery-3.5.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/bootstrap.min.js")" type="text/javascript"></script>

    @Html.DevExpress().GetScripts(
        new Script { ExtensionSuite = ExtensionSuite.SpellChecker },
        new Script { ExtensionSuite = ExtensionSuite.RichEdit },
        new Script { ExtensionSuite = ExtensionSuite.Editors },
        new Script { ExtensionSuite = ExtensionSuite.VerticalGrid },
        new Script { ExtensionSuite = ExtensionSuite.Scheduler },
        new Script { ExtensionSuite = ExtensionSuite.Chart },
        new Script { ExtensionSuite = ExtensionSuite.GridView },
        new Script { ExtensionSuite = ExtensionSuite.TreeList },
        new Script { ExtensionSuite = ExtensionSuite.Dashboard },
        //new Script { ExtensionSuite = ExtensionSuite.DashboardViewer },
        new Script { ExtensionSuite = ExtensionSuite.Bootstrap }
    )


    @Html.DevExpress().GetStyleSheets(
        new StyleSheet { ExtensionSuite = ExtensionSuite.NavigationAndLayout },
        new StyleSheet { ExtensionSuite = ExtensionSuite.SpellChecker },
        new StyleSheet { ExtensionSuite = ExtensionSuite.RichEdit, Theme="Office365" },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Editors },
        new StyleSheet { ExtensionSuite = ExtensionSuite.VerticalGrid },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Scheduler },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Chart },
        new StyleSheet { ExtensionSuite = ExtensionSuite.GridView },
        new StyleSheet { ExtensionSuite = ExtensionSuite.TreeList },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Dashboard },
        //new StyleSheet { ExtensionSuite = ExtensionSuite.DashboardViewer },
        new StyleSheet { ExtensionSuite = ExtensionSuite.Bootstrap }
    )

    <link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/BCMWeb_Movil.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/BCMWeb.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/printDiagram.css")" rel="stylesheet" type="text/css" />

    <script language="javascript" type="text/javascript">
        var closing = true;
        window.onbeforeunload = logoffUser;

        $(function () {
            $("a,input[type=submit]").click(function () { closing = false; });
        });

        function logoffUser() {
            if (closing) {
                var isOpera = (!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0;

                // Firefox 1.0+
                var isFirefox = typeof InstallTrigger !== 'undefined';

                // Safari 3.0+ "[object HTMLElementConstructor]"
                var isSafari = /constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === "[object SafariRemoteNotification]"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification));

                // Internet Explorer 6-11
                var isIE = false || !!document.documentMode;

                // Edge 20+
                var isEdge = !isIE && !!window.StyleMedia;

                // Chrome 1 - 79
                var isChrome = !!window.chrome && (!!window.chrome.webstore || !!window.chrome.runtime);

                // Edge (based on chromium) detection
                var isEdgeChromium = isChrome && (navigator.userAgent.indexOf("Edg") != -1);

                // Blink engine detection
                var isBlink = (isChrome || isOpera) && !!window.CSS;

                var location = window.location;
                var urlStr = location.protocol + "//" + location.host + "/" + "account/LogOff";

                if (isChrome || isEdge) {
                    if (!navigator.sendBeacon) return;

                    var data = "state=" + event.type + "&location=" + location.href;
                    var status = navigator.sendBeacon(urlStr, data);
                }

            }
        };

        //Disable Back Button In All Browsers.
        function DisableBackButtonAllBrowsers() {
            window.history.forward()
        };
        DisableBackButtonAllBrowsers();
        window.onload = DisableBackButtonAllBrowsers;
        window.onpageshow = function (evts) { if (evts.persisted) DisableBackButtonAllBrowsers(); };
        function hideDialogo() {
            setTimeout(function () {
                lp.Hide();
            }, 300);
        }
        function showDialogo() {
            //if ()
            lp.Show();
        }
        function GetEditableForm() {
            return document.getElementById("editForm");
        }
    </script>
    @*<script src="@Url.Content("~/Scripts/logOut.js")" type="text/javascript"></script>*@

</head>
<body>
    @Html.DevExpress().LoadingPanel(s =>
        {
            s.Name = "lp";
            s.Modal = true;
            s.Text = Resources.BCMWebPublic.labelLoadPanel;
            s.Width = Unit.Percentage(20);
        }).GetHtml()
    <div class="Contenedor">
        @Html.DevExpress().Panel(settings =>
    {
        settings.Name = "HeaderPane";
        settings.FixedPosition = PanelFixedPosition.WindowTop;
        settings.Collapsible = true;
        settings.SettingsAdaptivity.CollapseAtWindowInnerWidth = 500;
        settings.ControlStyle.CssClass = "headerPane";
        settings.Styles.Panel.CssClass = "panel";
        settings.Styles.ExpandedPanel.CssClass = "expandedPanel";
        settings.Styles.ExpandBar.CssClass = "bar";
        settings.SetContent(() =>
        {
            Html.RenderPartial("HeaderPartialView");
        });
    }).GetHtml()

        <script type="text/javascript">
            function updateHeaderMenuOrientation() {
                if (!window.HeaderMenu) return;
                var orientation = HeaderPane.IsExpandable() ? 'Vertical' : 'Horizontal';
                if (orientation !== HeaderMenu.GetOrientation())
                    HeaderMenu.SetOrientation(orientation);
            }
            var collection = ASPxClientControl.GetControlCollection();
            collection.ControlsInitialized.AddHandler(updateHeaderMenuOrientation);
            collection.BrowserWindowResized.AddHandler(updateHeaderMenuOrientation);
        </script>
        <div class="container" style="margin-top: 10px; margin-bottom: 10px;">
            @Html.DevExpress().Panel(settings =>
        {
            settings.Name = "MainPane";
            settings.ControlStyle.CssClass = "mainContentPane";
            settings.SetContent(RenderBody().ToHtmlString());
        }).GetHtml()
        </div>
    </div>
</body>
</html>