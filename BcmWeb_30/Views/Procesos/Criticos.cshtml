@using BcmWeb_30.Models

@model CriticoModel

<script type="text/javascript">
    $(document).ready(function () {
        var valoresIF = '@Session["ValoresIF"]';
        var valoresIO = '@Session["ValoresIO"]';
        var valoresMTD = '@Session["ValoresMTD"]';
        var valoresRPO = '@Session["ValoresRPO"]';
        var valoresRTO = '@Session["ValoresRTO"]';
        var valoresWRT = '@Session["ValoresWRT"]';

        if (valoresIF != null && valoresIF != "") {
            alert(valoresIF);
            valores = valoresIF;
            if (valores.indexOf(",") == -1) {
                var item = lbImpactoFinanciero.FindItemByValue(valores);
                lbImpactoFinanciero.SetSelectedItem(item);
            }
            else {
                aValores = valores.split(",");
                var aIndices = [];
                $.each(aValores, function (index, value) {
                    var item = lbImpactoFinanciero.FindItemByValue(value);
                    aIndices.push(item.index);
                });
                lbImpactoFinanciero.SelectIndices(aIndices);
            }
        }
        if (valoresIO != null && valoresIO != "") {
            valores = valoresIO;
            if (valores.indexOf(",") == -1) {
                var item = lbImpactoOperacional.FindItemByValue(valores);
                lbImpactoOperacional.SetSelectedItem(item);
            }
            else {
                aValores = valores.split(",");
                var aIndices = [];
                $.each(aValores, function (index, value) {
                    var item = lbImpactoOperacional.FindItemByValue(value);
                    aIndices.push(item.index);
                });
                lbImpactoOperacional.SelectIndices(aIndices);
            }
        }
        if (valoresMTD != null && valoresMTD != "") {
            valores = valoresMTD;
            if (valores.indexOf(",") == -1) {
                var item = lbMTD.FindItemByValue(valores);
                lbMTD.SetSelectedItem(item);
            }
            else {
                aValores = valores.split(",");
                var aIndices = [];
                $.each(aValores, function (index, value) {
                    var item = lbMTD.FindItemByValue(value);
                    aIndices.push(item.index);
                });
                lbMTD.SelectIndices(aIndices);
            }
        }
        if (valoresRPO != null && valoresRPO != "") {
            valores = valoresRPO;
            if (valores.indexOf(",") == -1) {
                var item = lbRPO.FindItemByValue(valores);
                lbRPO.SetSelectedItem(item);
            }
            else {
                aValores = valores.split(",");
                var aIndices = [];
                $.each(aValores, function (index, value) {
                    var item = lbRPO.FindItemByValue(value);
                    aIndices.push(item.index);
                });
                lbRPO.SelectIndices(aIndices);
            }
        }
        if (valoresRTO != null && valoresRTO != "") {
            valores = valoresRTO;
            if (valores.indexOf(",") == -1) {
                var item = lbRTO.FindItemByValue(valores);
                lbRTO.SetSelectedItem(item);
            }
            else {
                aValores = valores.split(",");
                var aIndices = [];
                $.each(aValores, function (index, value) {
                    var item = lbRTO.FindItemByValue(value);
                    aIndices.push(item.index);
                });
                lbRTO.SelectIndices(aIndices);
            }
        }
        if (valoresWRT != null && valoresWRT != "") {
            valores = valoresWRT;
            if (valores.indexOf(",") == -1) {
                var item = lbWRT.FindItemByValue(valores);
                lbWRT.SetSelectedItem(item);
            }
            else {
                aValores = valores.split(",");
                var aIndices = [];
                $.each(aValores, function (index, value) {
                    var item = lbWRT.FindItemByValue(value);
                    aIndices.push(item.index);
                });
                lbWRT.SelectIndices(aIndices);
            }
        }
    });
    function OnBeginGridCallback(s, e) {
        lp.Show();
    }
    function OnEndGridCallback(s, e) {
        lp.Hide();
    }
    function FeaturesSelectionChanged(s, e) {
        var selectedFeatures = s.GetSelectedValues();
        switch (s.name) {
            case "lbImpactoFinanciero":
                $("#ImpactoFinancieroSelected").val(selectedFeatures);
                break;
            case "lbImpactoOperacional":
                $("#ImpactoOperacionalSelected").val(selectedFeatures);
                break;
            case "lbMTD":
                $("#MTDSelected").val(selectedFeatures);
                break;
            case "lbRPO":
                $("#RPOSelected").val(selectedFeatures);
                break;
            case "lbRTO":
                $("#RTOSelected").val(selectedFeatures);
                break;
            case "lbWRT":
                $("#WRTSelected").val(selectedFeatures);
                break;
        }
    }
</script>


@section LeftPanel {
    @Html.DevExpress().Panel(settings =>
   {
       settings.Name = "LeftPane";
       settings.FixedPosition = PanelFixedPosition.WindowLeft;
       settings.Collapsible = true;
       settings.SettingsAdaptivity.CollapseAtWindowInnerWidth = 1023;
       settings.ControlStyle.CssClass = "leftPane";
       settings.Styles.Panel.CssClass = "panel";
       settings.SetContent(() =>
       {
           Html.RenderPartial("ContentLeftPartialView");
       });
   }).GetHtml()
}


@using (Html.BeginForm("Criticos", "Procesos", FormMethod.Post, htmlAttributes: new { id = "procesosForm" }))
{

    @Html.HiddenFor(m => m.IdModuloActual)
    @Html.HiddenFor(m => m.ImpactoFinancieroSelected)
    @Html.HiddenFor(m => m.ImpactoOperacionalSelected)
    @Html.HiddenFor(m => m.MTDSelected)
    @Html.HiddenFor(m => m.RTOSelected)
    @Html.HiddenFor(m => m.RPOSelected)
    @Html.HiddenFor(m => m.WRTSelected)

    <div style="float:right; margin-top: -20px; margin-right: 10px;">
        @Html.DevExpress().Button(b =>
        {
            b.Name = "botProcess";
            b.Text = Resources.BCMWebPublic.captionButtonFilter;
            b.ClientSideEvents.Click = "function (s,e) { lp.Show(); }";
            b.UseSubmitBehavior = true;
        }).GetHtml()
    </div>
    <table cellspacing="5" cellpadding="5" style="width: 100%;">
        <tr>
            <td>
                @Html.Partial("ImpactoFinancieroPartialView")
            </td>
            <td>
                @Html.Partial("ImpactoOperacionalPartialView")
            </td>
            <td>
                @Html.Partial("MTDPartialView")
            </td>
            <td>
                @Html.Partial("RTOPartialView")
            </td>
            <td>
                @Html.Partial("RPOPartialView")
            </td>
            <td>
                @Html.Partial("WRTPartialView")
            </td>
        </tr>
        <tr>
            <td colspan="6" style="padding-right: 10px;">
                <div style="float:left; margin-top: 5px;">
                    @Html.DevExpress().Button(b =>
                        {
                            b.Name = "botUpdate";
                            b.Text = Resources.ProcesosResource.captionButtonCritico;
                            b.ClientSideEvents.Click = "function (s,e) { lp.Show(); }";
                            b.RouteValues = new { Controller = "Procesos", Action = "UpdateCriticos" };
                            b.UseSubmitBehavior = true;
                        }).GetHtml()
                </div>
                <div style="float: right; margin-top: 5px;">
                    @Html.DevExpress().Button(settings =>
               {
                   settings.Name = "btExport";
                   settings.Text = Resources.BCMWebPublic.stringExportExcel;
                   settings.RouteValues = new { Controller = "Procesos", Action = "ExportCriticos" };
               }).GetHtml()
                </div>
                @Html.Partial("CriticosPartialView")
            </td>
        </tr>
    </table>

}