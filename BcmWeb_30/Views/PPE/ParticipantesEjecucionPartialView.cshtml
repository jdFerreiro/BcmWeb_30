@using BcmWeb_30
@using DevExpress.Data;

@{

    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    var grid = Html.DevExpress().GridView(
        settings =>
        {
            settings.Name = "gvParticipantes";
            settings.KeyFieldName = "IdParticipante";
            settings.CallbackRouteValues = new { Controller = "PPE", Action = "ParticipantesEjecucionPartialView" };
            settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "PPE", Action = "ParticipanteEjecucionAddNewPartial" };
            settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "PPE", Action = "ParticipanteEjecucionUpdatePartial" };
            settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "PPE", Action = "ParticipanteEjecucionDeletePartial" };
            settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
            settings.SettingsBehavior.ConfirmDelete = true;
            settings.Width = Unit.Percentage(100);
            settings.Settings.VerticalScrollableHeight = 325;
            settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Visible;
            settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;
            settings.Caption = Resources.PPEResource.TitleGridParticipantesEjecucion;
            settings.Styles.TitlePanel.Font.Bold = true;
            settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
            settings.SettingsLoadingPanel.Mode = GridViewLoadingPanelMode.Disabled;
            settings.ClientSideEvents.BeginCallback = "function (s,e) { lp.Show(); }";
            settings.ClientSideEvents.EndCallback = "function (s,e) { lp.Hide(); }";

            settings.CommandColumn.Visible = true;
            settings.CommandColumn.ShowNewButton = false;
            settings.CommandColumn.ShowNewButtonInHeader = true;
            settings.CommandColumn.ShowDeleteButton = true;
            settings.CommandColumn.ShowEditButton = true;
            settings.CommandColumn.FixedStyle = GridViewColumnFixedStyle.Left;
            settings.CommandColumn.Width = Unit.Percentage(10);
            settings.CommandColumn.Caption = " ";

            settings.Columns.Add(c =>
            {
                c.FieldName = "EmpresaParticipante";
                c.Caption = Resources.PPEResource.captionNombreEmpresa;
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.CellStyle.Wrap = DefaultBoolean.True;
                c.FixedStyle = GridViewColumnFixedStyle.Left;
                c.Width = Unit.Percentage(25);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "NombreParticipante";
                c.Caption = Resources.PPEResource.captionNombreParticipante;
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.CellStyle.Wrap = DefaultBoolean.True;
                c.Width = Unit.Percentage(25);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "NroTelefono";
                c.Caption = Resources.PPEResource.captionTelefono;
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.CellStyle.Wrap = DefaultBoolean.True;
                c.Width = Unit.Percentage(10);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "CorreoElectronico";
                c.Caption = Resources.PPEResource.captionEmail;
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.CellStyle.Wrap = DefaultBoolean.True;
                c.Width = Unit.Percentage(18);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "Responsable";
                c.Caption = Resources.PPEResource.captionResponsable;
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.ColumnType = MVCxGridViewColumnType.CheckBox;
                c.Width = Unit.Percentage(7);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "Utilizado";
                c.Caption = Resources.PPEResource.captionUtilizado;
                c.ColumnType = MVCxGridViewColumnType.CheckBox;
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
                c.Width = Unit.Percentage(5 );
            });

            settings.SettingsPopup.EditForm.HorizontalAlign = PopupHorizontalAlign.WindowCenter;
            settings.SettingsPopup.EditForm.VerticalAlign = PopupVerticalAlign.WindowCenter;
            settings.SettingsPopup.EditForm.Modal = true;
            settings.SettingsPopup.EditForm.ShowCloseButton = false;
            settings.SettingsPopup.EditForm.ShowHeader = true;
            settings.SettingsText.PopupEditFormCaption = Resources.IniciativaResource.captionHeaderFormIniciativas;

            settings.SetEditFormTemplateContent(c =>
            {
                Html.DevExpress().FormLayout(fls =>
                {
                    fls.Name = "FormLayoutParticipante";
                    fls.Width = Unit.Percentage(100);
                    fls.ColCount = 2;
                    fls.Items.Add(i =>
                    {
                        i.FieldName = "EmpresaParticipante";
                        i.Caption = Resources.PPEResource.captionNombreEmpresa;
                        i.ColSpan = 2;
                        i.NestedExtension().TokenBox(s =>
                        {
                            s.Properties.AllowCustomTokens = true;
                            s.Properties.IncrementalFilteringMode = IncrementalFilteringMode.Contains;
                            s.Properties.ShowDropDownOnFocus = ShowDropDownOnFocusMode.Always;
                            s.Properties.TextField = "Descripcion";
                            s.Properties.ValueField = "Descripcion";
                            s.Properties.DataSource = Metodos.GetEmpresasPruebaEjecucionParticipantes(long.Parse(Session["IdPrueba"].ToString()));
                            s.Properties.ClientSideEvents.TokensChanged = "TokensChanged";

                            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                            s.ShowModelErrors = true;
                            s.Width = Unit.Percentage(100);
                        });
                    });
                    fls.Items.Add(i =>
                    {
                        i.FieldName = "NombreParticipante";
                        i.Caption = Resources.PPEResource.captionNombreParticipante;
                        i.ColSpan = 2;
                        i.NestedExtension().TextBox(s =>
                        {
                            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                            s.ShowModelErrors = true;
                            s.Width = Unit.Percentage(100);
                        });
                    });
                    fls.Items.Add(i =>
                    {
                        i.FieldName = "CorreoElectronico";
                        i.Caption = Resources.PPEResource.captionEmail;
                        i.ColSpan = 2;
                        i.NestedExtension().TextBox(s =>
                        {
                            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                            s.ShowModelErrors = true;
                            s.Width = Unit.Percentage(100);
                        });
                    });
                    fls.Items.Add(i =>
                    {
                        i.FieldName = "NroTelefono";
                        i.Caption = Resources.PPEResource.captionTelefono;
                        i.NestedExtension().TextBox(s =>
                        {
                            s.Properties.MaskSettings.Mask = "(0000) 000,0000";
                            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                            s.ShowModelErrors = true;
                            s.Width = Unit.Percentage(100);
                        });
                    });
                    fls.Items.Add(i =>
                    {
                        i.FieldName = "Responsable";
                        i.Caption = Resources.PPEResource.captionResponsable;
                        i.NestedExtension().CheckBox(s =>
                        {
                            s.Properties.ValidationSettings.ErrorDisplayMode = ErrorDisplayMode.ImageWithTooltip;
                            s.ShowModelErrors = true;
                        });
                    });
                    fls.Items.Add(i =>
                    {
                        i.ColSpan = 2;
                        i.ShowCaption = DefaultBoolean.False;
                    }).SetNestedContent(() =>
                    {
                        ViewContext.Writer.Write("<div style='float:right'>");
                        Html.DevExpress().Button(
                    btnSettings =>
                    {
                        btnSettings.Name = "btnUpdate";
                        btnSettings.Text = Resources.BCMWebPublic.captionButtonSave;
                        btnSettings.ClientSideEvents.Click = "function(s, e){ gvParticipantes.UpdateEdit(); }";
                    }).Render();
                        Html.DevExpress().Button(
                    btnSettings =>
                    {
                        btnSettings.Name = "btnCancel";
                        btnSettings.Text = Resources.BCMWebPublic.captionButtonCancel;
                        btnSettings.Style[HtmlTextWriterStyle.MarginLeft] = "5px";
                        btnSettings.ClientSideEvents.Click = "function(s, e){ gvParticipantes.CancelEdit(); }";
                    }).Render();
                        ViewContext.Writer.Write("</div>");
                    });
                    fls.Items.AddEmptyItem();
                })
                .Bind(ViewData["EditableReg"] ?? c.DataItem)
                .Render();
            });
            settings.InitNewRow = (s, e) =>
            {
                e.NewValues["Responsable"] = false;
            };
        });
    if (ViewData["EditError"] != null)
    {
        grid.SetEditErrorText((string)ViewData["EditError"]);
    }
}
@grid.Bind(Metodos.GetPruebaEjecucionParticipantes(long.Parse(Session["IdPrueba"].ToString()))).GetHtml()

