@using BcmWeb_30;
@using BcmWeb_30.Models;

@model UsuariosModel

@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();

    var grid = Html.DevExpress().GridView<PerfilModelView>(
        settings =>
        {
            settings.Name = "gvUsuarios";
            settings.KeyFieldName = "IdUsuario";
            settings.CallbackRouteValues = new { Controller = "Administracion", Action = "UsuarioPartialView" };
            settings.Width = Unit.Percentage(100);
            settings.Settings.VerticalScrollableHeight = 425;
            settings.Settings.HorizontalScrollBarMode = ScrollBarMode.Hidden;
            settings.Settings.VerticalScrollBarMode = ScrollBarMode.Auto;
            settings.Styles.TitlePanel.Font.Bold = true;
            settings.SettingsPager.Mode = GridViewPagerMode.ShowAllRecords;
            settings.SettingsLoadingPanel.Mode = GridViewLoadingPanelMode.Disabled;
            settings.ClientSideEvents.BeginCallback = "function (s,e) { lp.Show(); }";
            settings.ClientSideEvents.EndCallback = "function (s,e) { lp.Hide(); }";


            settings.Columns.Add(c =>
            {
                c.Caption = string.Empty;
                c.SetDataItemTemplateContent(tc =>
                {
                    short _idEstatus = short.Parse(DataBinder.Eval(tc.DataItem, "IdEstatusUsuario").ToString());
                    switch (_idEstatus)
                    {
                        case 1:
                        case 2:
                            if ((bool)DataBinder.Eval(tc.DataItem, "CanDelete"))
                            {
                                ViewContext.Writer.Write(
                                    Html.ActionLink(Resources.BCMWebPublic.captionButtonEdit, "EditarUsuario", new { IdEmpresa = Model.IdEmpresaSelected, IdUsuario = DataBinder.Eval(tc.DataItem, "IdUsuario") }, new { onclick = "lp.Show();" }) + "<br />" +
                                    Html.ActionLink(Resources.AdministracionResource.captionBotonBloquear, "BloquearUsuario", new { IdEmpresa = Model.IdEmpresaSelected, IdUsuario = DataBinder.Eval(tc.DataItem, "IdUsuario") },
                                        new { onclick = "return confirm('" + string.Format(Resources.AdministracionResource.ConfirmBloquearMessage, DataBinder.Eval(tc.DataItem, "Nombre")) + "')" }) + "<br />" +
                                    Html.ActionLink(Resources.AdministracionResource.captionBotonEliminar, "EliminarUsuario", new { IdEmpresa = Model.IdEmpresaSelected, IdUsuario = DataBinder.Eval(tc.DataItem, "IdUsuario") },
                                        new { onclick = "return confirm('" + string.Format(Resources.AdministracionResource.ConfirmEliminarMessage, DataBinder.Eval(tc.DataItem, "Nombre")) + "');" })
                                );
                            }
                            else
                            {
                                ViewContext.Writer.Write(
                                    Html.ActionLink(Resources.BCMWebPublic.captionButtonEdit, "EditarUsuario", new { IdEmpresa = Model.IdEmpresaSelected, IdUsuario = DataBinder.Eval(tc.DataItem, "IdUsuario") }, new { onclick = "lp.Show();" }) + "<br />" +
                                    Html.ActionLink(Resources.AdministracionResource.captionBotonBloquear, "BloquearUsuario", new { IdEmpresa = Model.IdEmpresaSelected, IdUsuario = DataBinder.Eval(tc.DataItem, "IdUsuario") },
                                        new { onclick = "return confirm('" + string.Format(Resources.AdministracionResource.ConfirmBloquearMessage, DataBinder.Eval(tc.DataItem, "Nombre")) + "')" }) + "<br />"
                                );
                            }
                            break;
                        case 3:
                        case 4:
                            if ((bool)DataBinder.Eval(tc.DataItem, "CanDelete"))
                            {
                                ViewContext.Writer.Write(
                                    Html.ActionLink(Resources.AdministracionResource.captionBotonActivar, "ActivarUsuario", new { IdEmpresa = Model.IdEmpresaSelected, IdUsuario = DataBinder.Eval(tc.DataItem, "IdUsuario") },
                                        new { onclick = "return confirm('" + string.Format(Resources.AdministracionResource.ConfirmActivarMessage, DataBinder.Eval(tc.DataItem, "Nombre")) + "')" }) + "<br />" +
                                    Html.ActionLink(Resources.AdministracionResource.captionBotonEliminar, "EliminarUsuario", new { IdEmpresa = Model.IdEmpresaSelected, IdUsuario = DataBinder.Eval(tc.DataItem, "IdUsuario") },
                                        new { onclick = "return confirm('" + string.Format(Resources.AdministracionResource.ConfirmEliminarMessage, DataBinder.Eval(tc.DataItem, "Nombre")) + "');" })
                                );
                            }
                            else
                            {
                                ViewContext.Writer.Write(
                                    Html.ActionLink(Resources.AdministracionResource.captionBotonActivar, "ActivarUsuario", new { IdEmpresa = Model.IdEmpresaSelected, IdUsuario = DataBinder.Eval(tc.DataItem, "IdUsuario") },
                                        new { onclick = "confirm('" + string.Format(Resources.AdministracionResource.ConfirmActivarMessage, DataBinder.Eval(tc.DataItem, "Nombre")) + "')" })
                                );
                            }
                            break;
                    }
                });
                c.SetHeaderTemplateContent(tc =>
                {
                    ViewContext.Writer.Write(
                        Html.ActionLink(Resources.BCMWebPublic.captionButtonNew, "EditarUsuario", new { IdEmpresa = Model.IdEmpresaSelected, IdUsuario = -1 }, new { onclick = "lp.Show();" }).ToHtmlString()
                    );
                });
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
                c.Settings.AllowDragDrop = DefaultBoolean.False;
                c.Settings.AllowSort = DefaultBoolean.False;
                c.Width = Unit.Percentage(10);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "Nombre";
                c.Caption = Resources.FichaResource.captionNombre;
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.Width = Unit.Percentage(60);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "EstatusUsuario";
                c.Caption = Resources.FichaResource.captionEstatusUsuario;
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
                c.Width = Unit.Percentage(10);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "FechaEstatusUsuario";
                c.Caption = Resources.FichaResource.captionFechaEU;
                c.ColumnType = MVCxGridViewColumnType.DateEdit;
                c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
                c.Width = Unit.Percentage(10);
            });
            settings.Columns.Add(c =>
            {
                c.FieldName = "FechaUltimaConexion";
                c.Caption = Resources.FichaResource.captionFechaUC;
                c.ColumnType = MVCxGridViewColumnType.DateEdit;
                c.PropertiesEdit.DisplayFormatString = "dd/MM/yyyy";
                c.HeaderStyle.HorizontalAlign = HorizontalAlign.Center;
                c.HeaderStyle.Wrap = DefaultBoolean.True;
                c.CellStyle.HorizontalAlign = HorizontalAlign.Center;
                c.Width = Unit.Percentage(10);
            });
        });
}
@grid.Bind(Metodos.GetUsuarioEmpresa(Model.IdEmpresaSelected)).GetHtml()


